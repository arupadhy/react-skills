{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/reducer-context-memo-concepts/component-d.jsx\";\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst initialState = {\n  isLoading: true,\n  isError: false,\n  posts: []\n};\n\nconst reducer = (state, action) => {\n  console.log(arguments[0]);\n\n  switch (action.type) {\n    case 'data_retrieved':\n      return { ...state,\n        posts: action.data,\n        isLoading: false\n      };\n\n    case 'error':\n      return { ...state,\n        isError: true,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default function ReducerComponentPartTwo() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(async () => {\n    try {\n      const resp = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      console.log('===================================================');\n      console.log(resp);\n      dispatch({\n        type: 'data_retrieved',\n        data: resp\n      });\n    } catch (err) {\n      dispatch({\n        type: 'error'\n      });\n    }\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, state.isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }\n  }, \"Loading....\") : null, state.isError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 28\n    }\n  }, \" Error \") : null);\n}","map":{"version":3,"sources":["/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/reducer-context-memo-concepts/component-d.jsx"],"names":["React","useReducer","useEffect","axios","initialState","isLoading","isError","posts","reducer","state","action","console","log","arguments","type","data","ReducerComponentPartTwo","dispatch","resp","get","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,IADM;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAC;AAHW,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAAC,CAAD,CAArB;;AACA,UAAOH,MAAM,CAACI,IAAd;AACI,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACK,IAA1B;AAAgCV,QAAAA,SAAS,EAAE;AAA3C,OAAP;;AACF,SAAK,OAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYH,QAAAA,OAAO,EAAE,IAArB;AAA2BD,QAAAA,SAAS,EAAE;AAAtC,OAAP;;AACF;AACE,aAAOI,KAAP;AANN;;AAQA,SAAOA,KAAP;AACH,CAXD;;AAaA,eAAe,SAASO,uBAAT,GAAmC;AAC9C,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBhB,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAF,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACA,YAAMgB,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,4CAAV,CAAnB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAD,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,IAAI,EAAEG;AAFD,OAAD,CAAR;AAIH,KARD,CAQC,OAAME,GAAN,EAAW;AACRH,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE;AADD,OAAD,CAAR;AAGH;AACJ,GAdQ,EAcN,EAdM,CAAT;AAgBAH,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACJ,SAAN,gBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB,GAAuC,IAD1C,EAEGI,KAAK,CAACH,OAAN,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAhB,GAAiC,IAFpC,CADJ;AAMH","sourcesContent":["import React, {useReducer, useEffect} from 'react';\nimport axios from 'axios';\n\nconst initialState = {\n    isLoading: true,\n    isError: false,\n    posts:[]\n}\n\nconst reducer = (state, action) => {\n    console.log(arguments[0]);\n    switch(action.type) {\n        case 'data_retrieved':\n          return { ...state, posts: action.data, isLoading: false }\n        case 'error':\n          return { ...state, isError: true, isLoading: false }\n        default:\n          return state;  \n    }\n    return state;\n}\n\nexport default function ReducerComponentPartTwo() {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(async () => {\n        try {\n            const resp = await axios.get('https://jsonplaceholder.typicode.com/posts');\n            console.log('===================================================');\n            console.log(resp);\n            dispatch({\n                type: 'data_retrieved',\n                data: resp\n            });\n        }catch(err) {\n            dispatch({\n                type: 'error'\n            });\n        }\n    }, []);\n\n    console.log(state);\n    return (\n        <div>\n          {state.isLoading ? <p>Loading....</p> : null}\n          {state.isError ? <p> Error </p> : null}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}