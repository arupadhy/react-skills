{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/use-reducers-concepts/reducer-component.jsx\";\nimport React, { useReducer } from 'react';\nconst initialState = {\n  count: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n\n    case 'reset':\n      return {\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ReducerComponent() {\n  const initialState = {\n    count: 0\n  };\n  const [{\n    count\n  }, dispatch] = useReducer(reducer, initialState);\n  /*\n  Syntax of useReducer()\n      const [newState, dispatch] = useReducer((currentState, action) => {\n  \n      }, initialState);\n  \n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \" Coming from reducer component..count: \", count, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch('increment'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch('decrement'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch('reset'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Reset\"));\n}","map":{"version":3,"sources":["/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/use-reducers-concepts/reducer-component.jsx"],"names":["React","useReducer","initialState","count","reducer","state","action","ReducerComponent","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAP;AACI,SAAK,WAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF;AACE,aAAOE,KAAP;AARN;AAUH,CAXD;;AAaA,eAAe,SAASE,gBAAT,GAA4B;AACvC,QAAML,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE;AADU,GAArB;AAIA,QAAM,CAAC;AAACA,IAAAA;AAAD,GAAD,EAAUK,QAAV,IAAsBP,UAAU,CAACG,OAAD,EAAUF,YAAV,CAAtC;AACJ;;;;;;;;AAOI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAA2CC,KAA3C,MADF,eAEE;AAAQ,IAAA,OAAO,EAAI,MAAMK,QAAQ,CAAC,WAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAQ,IAAA,OAAO,EAAI,MAAMA,QAAQ,CAAC,WAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAQ,IAAA,OAAO,EAAI,MAAMA,QAAQ,CAAC,OAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADJ;AAQH","sourcesContent":["import React, {useReducer} from 'react';\n\nconst initialState = {\n    count: 0\n};\n\nconst reducer = (state, action) => {\n    switch(action) {\n        case 'increment':\n          return { count: state.count + 1 }\n        case 'decrement':\n          return { count: state.count - 1 }\n        case 'reset':\n          return { count: 0}\n        default:\n          return state;\n    }\n}\n\nexport default function ReducerComponent() {\n    const initialState = {\n        count: 0\n    };\n\n    const [{count}, dispatch] = useReducer(reducer, initialState);\n/*\nSyntax of useReducer()\n    const [newState, dispatch] = useReducer((currentState, action) => {\n\n    }, initialState);\n\n*/\n    return (\n        <div>\n          <p> Coming from reducer component..count: {count} </p>\n          <button onClick = {() => dispatch('increment')}>Increment</button>\n          <button onClick = {() => dispatch('decrement')}>Decrement</button>\n          <button onClick = {() => dispatch('reset')}>Reset</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}