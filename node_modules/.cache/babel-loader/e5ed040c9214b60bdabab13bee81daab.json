{"ast":null,"code":"var _jsxFileName = \"/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/use-memo/counter.jsx\";\nimport React, { useState, useMemo } from 'react';\n\nfunction Counter() {\n  const [counterOne, setCounterOne] = useState(0);\n  const [counterTwo, setCounterTwo] = useState(0);\n\n  const incrementOne = () => {\n    setCounterOne(counterOne + 1);\n  };\n\n  const incrementTwo = () => {\n    setCounterTwo(counterTwo + 1);\n  }; // needs to cache this value and update only if counterOne changes\n  // lets say this function was complex enough\n\n\n  const isEven = useMemo(() => {\n    return counterOne % 2 === 0;\n  }, [counterOne]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementOne,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, \"CounterOne \", counterOne), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, isEven() ? 'Even' : 'Odd'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementTwo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, \"CounterTwo \", counterTwo), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, isEven() ? 'Even' : 'Odd'));\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/arvind/MyPlayground/refresh-react-skills/react-skills/src/components/use-memo/counter.jsx"],"names":["React","useState","useMemo","Counter","counterOne","setCounterOne","counterTwo","setCounterTwo","incrementOne","incrementTwo","isEven"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;;AAEA,SAASC,OAAT,GAAmB;AAEf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACvBH,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AACvBF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAFD,CATe,CAaf;AACA;;;AACA,QAAMI,MAAM,GAAGR,OAAO,CAAC,MAAM;AACzB,WAAOE,UAAU,GAAG,CAAb,KAAmB,CAA1B;AACH,GAFqB,EAEnB,CAACA,UAAD,CAFmB,CAAtB;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2CJ,UAA3C,CADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,MAAM,KAAK,MAAL,GAAc,KAA3B,CAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,eAIG;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2CH,UAA3C,CAJH,eAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,MAAM,KAAK,MAAL,GAAc,KAA3B,CALH,CADJ;AASH;;AAED,eAAeP,OAAf","sourcesContent":["import React, {useState, useMemo} from 'react';\n\nfunction Counter() {\n\n    const [counterOne, setCounterOne] = useState(0);\n    const [counterTwo, setCounterTwo] = useState(0);\n\n    const incrementOne = () => {\n        setCounterOne(counterOne + 1);\n    }\n\n    const incrementTwo = () => {\n        setCounterTwo(counterTwo + 1);\n    }\n\n    // needs to cache this value and update only if counterOne changes\n    // lets say this function was complex enough\n    const isEven = useMemo(() => {\n        return counterOne % 2 === 0;\n    }, [counterOne])\n\n    return (\n        <div>\n           <button onClick={incrementOne}>CounterOne {counterOne}</button>\n           <span>{isEven() ? 'Even' : 'Odd' }</span>\n           <br/>\n           <button onClick={incrementTwo}>CounterTwo {counterTwo}</button>\n           <span>{isEven() ? 'Even' : 'Odd'}</span>\n        </div>\n    );\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}